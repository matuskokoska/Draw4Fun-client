<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>