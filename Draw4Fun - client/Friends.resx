<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFkAAABZCAYAAABVC4ivAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wQAADsEBuJFr7QAACWtJREFUeF7tnelbVEcWh/sfnplHExVl33dkVURARBRUohISGDUYjRpFCCJuKJuA
        LA0IeR7z/cx966a0wWIY8FZVT9sffk+zNLer3nvq1DlV5xaxd++XZG7xfVqWBN/Y7MKipGVXMRP9tKJV
        GrIDJT1k0/AzvS+ZlTSQTSCZNBaWV2QpHg+0Ju9X4+p7PVnPLnz+u8RrJZuSAjKQALe4sqpgrqyvB9pQ
        EJ+MjcutO/dk8PYdGbr3QB6PPpXXU9MK+OrGhiyvrau/09fZee1kUFJABvCzl68DgGPSP3hbWju6pKb+
        tBSWVkl2fqmcyCmS49mF6jUrr0TyiiqkpOKkNDa3Suelq+pGaCtPRtBeIWsgWO/Eq8kAYrEcOpIlxzIL
        PgEF8k7xcwT4I8fz5PDRLKk/1SKT0zPKuvW1kwW4F8gawPzScjDc12Tk6TPJL65UYHMKyvYtwGdkFcj3
        Gdny48DNT9flNfEzE9vgUs4h685ivbiJtvMXAzi5yipNAPcjrPu7YzlSXl0vv/0+LG9m5pTPRj5diVPI
        2noZ0nd+exCALQqGe66yRBO0g4oRAWxuHsA7urqD0TKhJkgfoJ1BpnNY09Tcu8B/tgYQspXlmSBFJW4e
        fj68kSXydnYuuMlLzkE7gawteG5xUXILK+ToiTwjFJv6PiNHLl7+QeIfNlMTMsIvNja3BZ11DxgxajKy
        8hVgncy4knXI2k0QQWDBUfvf/Qg/ff/RsGqPqa225ATy2uamtHdeDCDnGzvvStzkvp9vqsSFbNLUXhty
        4i5wFXTS9kS3l45l5suVa30qhk4ZyNpVjL94Jf/67oRXV4HIJLt6rirIpvbaknXITDIs6PT9PBDExQUB
        aDMAFyIrPHehRyVCpvbakhOfjOXcffBIJQemzrsSkNs7Lyn3ZWqrLTmBjOX0D97yEh8nCsht51MUMmk0
        E47v6OIz5BR0F6sbH+RCd28w8fi1ZCa+C90pNvEhDbmrxz9kRlLvjZ8C9xU3ttWWnE18A7eG1AK7qfOu
        xJzw079/UcmIqa225AQysfLwH+Oqkz5jZVbj2CfUe4KuZB0yYgXuxeQbtezoEzIrcb8/GUm9tQut+aUV
        KSqr9ppas0A0NvE8gLwcjDBzO23IGeTltbicaetUYZQJgG0xgpgTyD4ZWbgxUzttyAlkrIaEpKe3z9vk
        B2TSetqTciEcwmrWt7bk5tCvXlNr9v5yC8tUbcfiiju/bB0ygJnNHzx+onakk2ElrvJkg9MwzoklU3ZF
        NVBG1tdv+3+tuNH1p846TUicWHL8wwcpraw7cPFKlALyqZZ2p8udTiCvbW5JXdNZb5FFotgdcb3c6cyS
        WZjxvQqHmHjDLah11TZTm6OWE8j4PyIL0lpTx12KrO+Xu/dVm1IKcrh28TSw5OhLsvajMCHJldHxCdWm
        lIGMyLCoP/YdwoWQ8+TNzKzTAhcnkBGWU1xeLZm5xUYALkR0U3my0WlkgZxBJlZmVvfll7m5LBA9HB5x
        Xt3pBLL2y1TTHz6a7TxeJmzj5lKuy812CRg5s2Q6thRflVdvp6SorEbN8i78c5h8nFPzAm7CNWDkDDKi
        gyzMYNWuSgSY6HARLkO2nXIKGYWgV+XF5JRyHSYwUSkxZAvro81tsi0vkLHk569D/2yCE5WAjD9+MTkZ
        fKbb3ZBEeYLMnt9bJ5BP5BTK66kZ54XfiXIOGYVFiDPq+TsTnKhE2JaVVxp8nrkdruQNMhZ9+GimEU5U
        AnJeUbksr4UPUPqSF8iI2T6/uMJqzMyk19LepSr9fUUWyBtkIoxf7z+0VhyOFXMDeazMpz9G3iBjWetb
        m3K9fzBITKKtLNKh26ORP7zGx1reIGuRhZGRscFpArZf6bBt8PaQKnT0DRh5hQwAII+OP5N/Hj5uhLZf
        ARlXQZj4edv/G7ZkhjKHh2x9/CuycA7IPOI7NvFSXr6ZUp8TFhh+gxPf+9VVOX22QxpOn5WOrp6/4UTj
        l6m3IwnhIaDi8hrlm8Nn9/yAdg6ZjgJ4dPy5/ONQhooA2MWOCrAW1wM2q3D4+5n5Bec1cFpeLFlPdgAw
        AYpaTIRNZ9qcF39rOYWMFWFN+EqX+318Trga99yLNTuHTFjV03tDLdqbgNgSi1GXf+j7+5Qut+cTOYGs
        O4UVMdNTcU+YZYJhQ1gyfpkJkLJZ3JW2aBewrULWnSCtxYIWV+KBNd1wsiOSKCAjIg1q8jovXZGpuXlV
        2eTiJBcrkHWjSQhwDxyJw1DFetkxNoGwLSATbdAGtqRwV91Xr6vDoGijXt+wATwyyNpqES6BYcnCPDVw
        umOZuX6PYkgU68xhm4rVHAFk3Iheho0SdiSQaRCNI0Ta+vhRnow9k5b2TmUtzOq+z7n4b6JtnCfHa++N
        fmUcPKYcJewDQU78YBqDb5t+tyBD9x5KbmG5HDqSaSXBsCnaikEcOpKtnlpl5yb02eEG7NfA3jdk/WG4
        BDK3mflF9UhvQUmVGn6uC1eiFm5EP9fS3tmt5hNGKP09qGXvCTnxwuwyswa88eefymobTreqO69dwv+T
        5e4l+kMUxKjkFDAOa8UV4rd3ctlLu0LWF2C44KN4fTg8KucudKsIgeCeEwpTCexu4lkXYHPa7c2hu8pF
        EpLymshqNxkh80dAZZi8ejstl65cC+LLWlUpz91N5onMpnCFjFrKzAZu3VGcsGxGOF/vBnsbZP0mNh5n
        5udVFSYWy4UJdb4Fq/1fRMbK+jfr1sxHGCKuJIT9pWV/gswveBN35tqPA2qnglQ0DXZ3YXgwYjO4pKJW
        ha6J4d82yBowXzOZYblpuPsTIStLqqTsRCJ6bURB5gt+yH4Yj8TyRtNF0tpbYWKTI2VVtSpV16Bj7LNN
        Ts8Gb+IBb/9PjKaCyBeq65oCw40r1xGDdllVXdqCIxSulvOhr1zrV1ljjE1MyJvenNbBBWhdwRRzuQ30
        rQnvwMHYMdMv04pGxwNLrm1oTkO2KdxFXRqyXSnIjWfSkG0qhJy2ZKtSkJvSlmxVQKZyKQ3ZogiPm1s7
        0pBtihW68xcvS4xE5KBiQSRZRLkBS4+2xNDfr1gsut4/IDF2l9lWQTyNVFBSuU35xVXquDGzqo1i54Bz
        ORNVWMrPvhT/vJC12O0Kf8ZuzE6VVdUbxT/SKq9u2Kayqu3fh6qXipoGqaptMqqmvln9w8VEnQxi3brG
        li91qkXt//HPF7erLfDF56Q2eM/jkTH5D/NI58YMAV/LAAAAAElFTkSuQmCC
</value>
  </data>
</root>